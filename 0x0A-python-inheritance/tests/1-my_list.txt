Test cases: 1-my_list.py
========================

CASE: import
>>> MyList = __import__('1-my_list').MyList
>>>

=================================================

CASE: normal list

>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(3)
>>> my_list.append(2)
>>> print(my_list)
[1, 3, 2]
>>> my_list.print_sorted()
[1, 2, 3]
>>> print(my_list)
[1, 3, 2]

=================================================

CASE: list as parameter

>>> a = [1, 3, 2]
>>> my_list = MyList(a)
>>> my_list.print_sorted()
[1, 2, 3]

=================================================

CASE: empty list

>>> a = []
>>> my_list = MyList(a)
>>> my_list.print_sorted()
[]

=================================================

CASE: single value

>>> my_list = MyList()
>>> my_list.append(9)
>>> my_list.print_sorted()
[9]
>>> print(my_list)
[9]

=================================================

CASE: same value

>>> my_list2 = MyList()
>>> my_list2.append(9)
>>> my_list2.append(9)
>>> my_list2.append(9)
>>> my_list2.append(9)
>>> my_list2.print_sorted()
[9, 9, 9, 9]

=================================================

CASE: test function on parent object
>>> my_list = [1, 2, 3]
>>> my_list.print_sorted()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'list' object has no attribute 'print_sorted'

=================================================

CASE: negative values

>>> MyList = __import__('1-my_list').MyList
>>> my_list = MyList()
>>> my_list.append(2)
>>> my_list.append(-1)
>>> my_list.append(9)
>>> my_list.append(-3)
>>> my_list.print_sorted()
[-3, -1, 2, 9]
